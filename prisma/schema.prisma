generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url = "mysql://zykp1gm5iibszlw5ftoe:pscale_pw_h0NKH46rOAtK66EhEUsjyFIVIldY1LZ9r1iILhHRqYF@aws.connect.psdb.cloud/ai-saas?sslaccept=strict"
  relationMode = "prisma"
}

model Category {
  id            String @id @default(uuid())
  name          String
  companions    Companion[]
}

model Companion {
  id            String @id @default(uuid())
  userId        String
  userName      String
  src           String
  name          String @db.Text
  description   String
  instructions  String @db.Text
  seed          String @db.Text

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  category      Category @relation(fields: [categoryId], references: [id])
  categoryId    String

  messages      Message[]

  @@index([categoryId])
  @@fulltext([name])
}

enum Role {
  user
  system
}

model Message {
  id          String   @id @default(uuid())
  role        Role   
  content     String   @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  companionId String
  userId      String

  companion   Companion @relation(fields: [companionId], references: [id], onDelete: Cascade)
  
  @@index([companionId])
}

model UserSubscription {
  id                        String    @id @default(cuid())
  userId                    String    @unique
  stripeCustomerId          String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId      String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId             String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd    DateTime? @map(name: "stripe_current_period_end")
}
